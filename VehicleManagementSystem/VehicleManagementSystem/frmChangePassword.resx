<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>