<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAA7pJREFUeF7t
        m0uoTVEYx69HHknyNqQ8hpIBJuQxMjFCRjIxMKAQpWRg4DWUiTJAeQ0oEVFElEwYCoWYeCV5lLffn/vV
        arf3Pfux1t3fqfOrX92z727t9f3P3mufs89afY4YhRvxGr7DX/inhN/xGZ7ApdiVLMbnmFdgVS/iJOwa
        1qPeRSvgG97Fc3i6hBfwEYYh6PVUdM9u/I3W8aM4BeuwEB+itXUDh6BLhqGKtc7+xE3YlDF4H63dNZgU
        HeA9nkcNYmVQJy+jdfILrsI8tuBZ1OVQ5BEcj8YcVKBqW2dBMtbiD7RCNHp3CmEahu/QG9Spm8cMtP06
        uR1D1Bdt13gyQhtiky3ezAthKE7HraiCbd+nOAuLUMfvYDhG5PkW52PIQbT/K8iohMWrc/vwRf9r+QTD
        UT3PezgZU7EH7Vi6JKKRLX4bCqUchlDkZ9yLIzElSQIoKl5oYLuNdtCveAbtXn0Ydb8PB6uURA+gU/E3
        0Q6ogWcltknUAKoUr9vPamybaAFooNI7ao3tQCNbvL68bEAPRAtgLL5Ga0zXsz7FZYvXmbEZvRD1EpiL
        utdagxrcwuLlLvRE9EEwG0LofvRG9ABEXgj6HO6RJAHoun+F1vBx9Pp1M0kAasgavYIaDL2SPAAdwDO9
        ALAXQL+9ALQhBr0AsEwA+oHiMepZfwqWox66HPv3Kp/WAhiH+l6gfT7hEozJCtSzBrWv4+izSR6tngEH
        0PaLGUJYvNSjuCJaDUAcQts3RgjZ4tX+QLQegIgVQtXihYsARNMQ6hQv3AQg6oZQt3jhKgBRNYQmxQt3
        AYiyITQtXrgMQHQKIUbxwm0AoiiEWMUL1wGIbAg7MVbxwn0AIgwhtGnxoisCEJr8YG3KUxiDrggge83L
        MrfIMrgPIFt8OGskRgiuAyga7bMDY5MQ3AbQ6VYXKwSXAZS9z8cIwV0AZYs3mobgKoCqxRtNQnATQN3i
        jbohuAigafFGnRBaDyBW8UbVEFoNIHbxRpUQWgtgNH5E2y9W8UYYwgcsmnDZWgCa3/sStY/m66bAQtAK
        k+HakENrAYiJOO//n8lQ+xP+/5lLqwF4oBcA9gLoN1oAM9EaHeiHSQ8kWTChlSC2EOKqNjjmOqqfmucc
        dW3CLVTDmj0+WxscolM+2aKpdaiGpZa9FE1QaAv1J3y8pqn+UdHMUDsL5ANcgB5YhOqP9U0TupPMZNXS
        N80BsgNJLVXVElZbIjOYtrJ0VgspLmF4UC8O6uLpZXgStXy901K5VDZYPt/X9xfGpP3eJc+yTgAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>